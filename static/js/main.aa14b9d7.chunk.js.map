{"version":3,"sources":["scripts/custom_hooks/useCatPicUrl.ts","components/ProjectList.tsx","components/ContactList.tsx","components/ContactLink.tsx","components/Content.tsx","components/FooterItems.tsx","components/Footer.tsx","components/Impressum.tsx","components/App.tsx","scripts/serviceWorker.ts","index.tsx"],"names":["useCatPicUrl","useState","catImageUrl","setCatImageUrl","useEffect","a","fetch","then","response","json","file","getCatPicUrl","BulletPoint","styled","div","ProjectList","props","bulletPoints","React","Children","map","children","child","role","aria-label","Items","ContactList","LinkElement","ColoredIcon","Icon","ContactLink","href","link","icon","iconifyIcon","text","ContentGrid","scroll","keyframes","Background","ContentCell","Headline","CatImage","img","Content","githubFilled","keybaseIcon","mailOutlined","src","FooterItems","FooterGrid","FooterBackground","FooterCell","FakeImpressumLink","Footer","onClick","showImpressum","ContentBackground","CloseButton","button","Impressum","portalRoot","document","getElementById","show","ReactDOM","createPortal","closeImpressum","e","stopPropagation","App","setShowImpressum","Fragment","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aa14b9d7.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useCatPicUrl = () => {\r\n    const [catImageUrl, setCatImageUrl] = useState('');\r\n    useEffect(() => {\r\n        const getCatPicUrl = async () => {\r\n            return await fetch('https://aws.random.cat/meow')\r\n                .then((response) => {\r\n                    return response.json();\r\n                })\r\n                .then((json) => {\r\n                    setCatImageUrl(json.file);\r\n                });\r\n        };\r\n        getCatPicUrl();\r\n    }, []);\r\n\r\n    return catImageUrl;\r\n};\r\n\r\nexport default useCatPicUrl;\r\n","import React, { FunctionComponent } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst BulletPoint = styled.div`\r\n    padding-left: 20px;\r\n`;\r\n\r\nexport interface ProjectListProps {\r\n\r\n}\r\n\r\nconst ProjectList: FunctionComponent<ProjectListProps> = (props) => {\r\n    const bulletPoints = React.Children.map(props.children, (child) => {\r\n        return <BulletPoint><span role=\"img\" aria-label=\"Electric Light Bulb Emoji\">ðŸ’¡</span> {child}</BulletPoint>;\r\n    });\r\n\r\n    return (<>{bulletPoints}</>);\r\n}\r\n\r\nexport default ProjectList;","import React, { FunctionComponent } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Items = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    margin-top: -20px;\r\n\r\n    > * {\r\n        margin-top: 20px;\r\n    }\r\n\r\n    > *:not(:last-child) {\r\n        margin-right: 20px;\r\n    }\r\n`;\r\n\r\nexport interface ContactListProps {\r\n\r\n}\r\n\r\nconst ContactList: FunctionComponent<ContactListProps> = (props) => {\r\n    return (<Items>{props.children}</Items>);\r\n}\r\n\r\nexport default ContactList;","import React, { FunctionComponent } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Icon } from \"@iconify/react\";\r\n\r\nconst LinkElement = styled.a`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 5px;\r\n    min-width: 100px;\r\n    width: fit-content;\r\n    font-size: 14pt;\r\n    border: solid 1px #00000000;\r\n    text-decoration: none;\r\n\r\n    transition: all 0.1s ease-in-out;\r\n\r\n    &:hover {\r\n        transform: scale(1.1, 1.1);\r\n        box-shadow: 0 5px 15px rgba(0,0,0,0.3);\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst ColoredIcon = styled(Icon)`\r\n    width: 50px;\r\n    height: auto;\r\n    margin-bottom: 10px;\r\n\r\n    > path {\r\n        fill: #dddddddd;\r\n    }\r\n`;\r\n\r\nexport interface ContactLinkProps {\r\n    iconifyIcon: any; // haven't figured out how to use IconifyIcon here -> type error on usage\r\n    text: string;\r\n    link: string;\r\n}\r\n\r\nconst ContactLink: FunctionComponent<ContactLinkProps> = (props) => {\r\n    return (\r\n        <LinkElement href={props.link}>\r\n            <ColoredIcon icon={props.iconifyIcon} />\r\n            {props.text}\r\n        </LinkElement>\r\n    );\r\n}\r\n\r\nexport default ContactLink;","import React, { FunctionComponent } from 'react';\r\nimport styled, { keyframes } from 'styled-components'\r\nimport useCatPicUrl from '../scripts/custom_hooks/useCatPicUrl';\r\nimport keybaseIcon from '@iconify/icons-fa-brands/keybase';\r\nimport githubFilled from '@iconify/icons-ant-design/github-filled';\r\nimport mailOutlined from '@iconify/icons-ant-design/mail-outlined';\r\nimport ProjectList from './ProjectList';\r\nimport ContactList from './ContactList';\r\nimport ContactLink from './ContactLink';\r\n\r\nconst ContentGrid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: minmax(20px, auto) auto minmax(20px, auto);\r\n    grid-template-rows: minmax(20px, 100px) auto minmax(20px, 0);\r\n\r\n    height: fit-content;\r\n    min-height: 100vh;\r\n`;\r\n\r\nconst scroll = keyframes`\r\n    0%{background-position:0% 50%}\r\n    50%{background-position:100% 50%}\r\n    100%{background-position:0% 50%}\r\n`;\r\n\r\nconst Background = styled.div`\r\n    grid-column: 1/4;\r\n    grid-row: 1/4;\r\n\r\n    background: linear-gradient(320deg, #09c494, #c40973, #0939c4);\r\n    background-size: 600% 600%;\r\n\r\n    animation: ${scroll} 60s ease infinite;\r\n`;\r\n\r\nconst ContentCell = styled.div`\r\n    grid-column: 2;\r\n    grid-row: 2;\r\n\r\n    max-width: 1000px;\r\n\r\n    justify-self: center;\r\n\r\n    font-size: 20pt;\r\n`;\r\n\r\nconst Headline = styled.div`\r\n    font-size: 56pt;\r\n    margin-bottom: 40px;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst CatImage = styled.img`\r\n    max-width: 100%;\r\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n`;\r\n\r\nexport interface ContentProps {\r\n\r\n}\r\n\r\nconst Content: FunctionComponent<ContentProps> = () => {\r\n    const catImageUrl = useCatPicUrl();\r\n\r\n    return (\r\n        <ContentGrid>\r\n            <Background />\r\n            <ContentCell>\r\n                <Headline>Hey there!</Headline>\r\n                <p>This is just another personal website of just another software dev ;). The only reason it exists is for me to test out some stuff and have a bit of fun while doing just that.</p>\r\n                <p>I am currently enrolled at <a href=\"https://www.uni-heidelberg.de/en\">Heidelberg University</a> and working for <a href=\"https://www.combit.net/\">combit</a>.</p>\r\n                <p>Here are some other projects you can check out:</p>\r\n                <ProjectList>\r\n                    <a href=\"https://recipeasy.reinwald.dev\">recipeasy</a>\r\n                </ProjectList>\r\n                <p>You can find and contact me at:</p>\r\n                <ContactList>\r\n                    <ContactLink link=\"https://github.com/DonatJR\" text=\"GitHub\" iconifyIcon={githubFilled} />\r\n                    <ContactLink link=\"https://keybase.io/donatjr\" text=\"Keybase\" iconifyIcon={keybaseIcon} />\r\n                    <ContactLink link=\"mailto://jonas@reinwald.dev\" text=\"Mail\" iconifyIcon={mailOutlined} />\r\n                </ContactList>\r\n                <p>Also, have a nice day and a cat picture:</p>\r\n                <CatImage src={catImageUrl} />\r\n                <p>And most important of all, don't forget to <span role=\"img\" aria-label=\"Droplet Emoji\">ðŸ’§</span><span role=\"img\" aria-label=\"Bar of Soap Emoji\">ðŸ§¼</span><span role=\"img\" aria-label=\"Palms Up Together Emoji\">ðŸ¤²</span>!</p>\r\n            </ContentCell>\r\n        </ContentGrid >\r\n    );\r\n}\r\n\r\nexport default Content;","import React, { FunctionComponent } from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst Items = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    > * {\r\n        margin: 5px 0;\r\n    }\r\n\r\n    > *, a {\r\n        font-size: 16pt;\r\n    }\r\n\r\n    > *:not(:last-child)::after {\r\n        content: \"ðŸ––\";\r\n        margin: 0 10px;\r\n    }\r\n`;\r\n\r\nexport interface FooterItemsProps {\r\n\r\n}\r\n\r\nconst FooterItems: FunctionComponent<FooterItemsProps> = (props) => {\r\n    return (\r\n        <Items>\r\n            {props.children}\r\n        </Items>\r\n    );\r\n}\r\n\r\nexport default FooterItems;","import React, { FunctionComponent } from \"react\";\r\n\r\nimport styled from 'styled-components';\r\nimport FooterItems from './FooterItems';\r\n\r\nconst FooterGrid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: minmax(20px, auto) auto minmax(20px, auto);\r\n    grid-template-rows: minmax(10px, 20px) auto minmax(10px, 20px);\r\n\r\n    min-height: 100px;\r\n`;\r\n\r\nconst FooterBackground = styled.div`\r\n    grid-column: 1/4;\r\n    grid-row: 1/4;\r\n    background-color: #222;\r\n`;\r\n\r\nconst FooterCell = styled.div`\r\n    grid-column: 2;\r\n    grid-row: 2;\r\n    max-width: 1000px;\r\n\r\n    justify-self: center;\r\n    align-self: center;\r\n\r\n    font-size: 20pt;\r\n`\r\n\r\nconst FakeImpressumLink = styled.div`\r\n    cursor: pointer;\r\n\r\n    &::after {\r\n        cursor: initial;\r\n    }\r\n`;\r\n\r\nexport interface FooterProps {\r\n    showImpressum: () => void;\r\n}\r\n\r\nconst Footer: FunctionComponent<FooterProps> = (props) => {\r\n    return (\r\n        <FooterGrid>\r\n            <FooterBackground />\r\n            <FooterCell>\r\n                <FooterItems>\r\n                    <FakeImpressumLink onClick={props.showImpressum}>Impressum</FakeImpressumLink>\r\n                    <div>Source can be found <a href=\"https://github.com/DonatJR/reinwald.dev\">here</a></div>\r\n                    <div>Powered by <a href=\"https://pages.github.com/\">GitHub Pages</a></div>\r\n                </ FooterItems>\r\n            </FooterCell>\r\n        </FooterGrid >\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Footer;","import React, { FunctionComponent } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Background = styled.div`\r\n    position: fixed; \r\n    left: 0; \r\n    right: 0; \r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto; \r\n\r\n    height: 100vh;\r\n    width: 100vw;\r\n\r\n    z-index: 99;\r\n    background-color: rgba(30, 30, 30, 0.9);\r\n\r\n    overscroll-behavior: contain;\r\n`;\r\n\r\nconst ContentBackground = styled.div`\r\n    position: absolute; \r\n    left: 0; \r\n    right: 0; \r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto; \r\n\r\n    height: fit-content;\r\n    width: 80vw;\r\n    max-width: 1200px;\r\n\r\n    background-color: rgb(220, 220, 220);\r\n    border-radius: 10px;\r\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    * {\r\n        color: #333333dd;\r\n    }\r\n    margin: 40px;\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n    color: #333333dd;\r\n    font-size: 16pt;\r\n    font-weight: bold;\r\n\r\n    padding: 10px 20px;\r\n    margin-top: 20px;\r\n\r\n    background-color: rgba(0,0,0,0);\r\n    border: 3px solid #333333dd;\r\n\r\n    transition: all 0.1s ease-in-out;\r\n\r\n    &:active, &:focus {\r\n        outline: none;\r\n    }\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n        transform: scale(1.1, 1.1);\r\n    }\r\n`;\r\n\r\nexport interface ImpressumProps {\r\n    show: boolean;\r\n    closeImpressum: () => void;\r\n}\r\n\r\nconst Impressum: FunctionComponent<ImpressumProps> = (props) => {\r\n    const portalRoot = document.getElementById(\"modal-overlay\");\r\n\r\n    if (!props.show || !portalRoot) {\r\n        return null;\r\n    }\r\n\r\n    return ReactDOM.createPortal(\r\n        <Background onClick={props.closeImpressum}>\r\n            <ContentBackground onClick={(e) => e.stopPropagation()}>\r\n                <Content>\r\n                    <h1>Impressum</h1>\r\n                    <h2>Angaben gem&auml;&szlig; &sect; 5 TMG</h2>\r\n                    <p>Jonas Reinwald<br />\r\n                    Rudolf-Hell-Stra&szlig;e 2<br />\r\n                    69126 Heidelberg</p>\r\n\r\n                    <h2>Kontakt</h2>\r\n                    <p>Telefon: +49 (0)177 614 0 688<br />\r\n                    E-Mail: jonas@reinwald.dev</p>\r\n                    <p>Quelle: <a href=\"https://www.e-recht24.de\">https://www.e-recht24.de</a></p>\r\n                    <CloseButton onClick={props.closeImpressum}>Close</CloseButton>\r\n                </Content>\r\n            </ContentBackground>\r\n        </Background>,\r\n        portalRoot\r\n    );\r\n}\r\n\r\nexport default Impressum;","import React, { useState } from 'react';\n\nimport Content from './Content';\nimport Footer from './Footer';\nimport Impressum from './Impressum';\n\nfunction App() {\n    const [showImpressum, setShowImpressum] = useState(false);\n\n    return (\n        // grid: content + footer\n        // content grid: title + content (text) + find me at (sites) + some more projects (link to recipease, ...)\n        <React.Fragment>\n            <Impressum show={showImpressum} closeImpressum={() => setShowImpressum(false)} />\n            <Content />\n            <Footer showImpressum={() => setShowImpressum(true)} />\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './scripts/serviceWorker';\nimport { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n    html, body, #root {\n        width: 100%;\n        height: 100%;\n    }\n\n    body {\n        margin: 0;\n    }\n\n    * {\n        font-family: 'Roboto', sans-serif;\n        color: #dddddd;\n    }\n\n    *, *:after, *:before {\n        box-sizing: border-box;\n    }\n\n    a {\n        color: #dddddd;\n    }\n`\nReactDOM.render(\n    <React.StrictMode>\n        <GlobalStyle />\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}